name: automation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [master]
  pull_request:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkar in på den aktuella branschen och repon
        uses: actions/checkout@v2

      - name: Save release version
        run: echo "RELEASE_VERSION=$(echo ${GIT_MESSAGE} | grep -Po '(?<=--v:)[^;]+')" >> $GITHUB_ENV
        env:
          GIT_MESSAGE: ${{github.event.head_commit.message}}

      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo $RELEASE_VERSION

      # Använder tillfälligt dotnet-miljön
      - name: Setup Dotnet Env
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Kör restore
        run: dotnet restore

      - name: Kör vår Build
        run: dotnet build --no-restore

      - name: Genomför unit-tester
        run: dotnet test --no-build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: valient/assignment-cloud:$RELEASE_VERSION

      - name: Install Open VPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      - name: Connect to VPN
        id: connect_vpn
        uses: "kota65535/github-openvpn-connect-action@v1"
        with:
          config_file: ./.github/vpn/config.ovpn
          username:  ${{ secrets.VPN_USERNAME}}
          password: ${{ secrets.VPN_PASSWORD}}
          client_key: ${{ secrets.OPEN_VPN_KEY}}

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPN_HOST }}
          username: ${{ secrets.VPN_USERNAME }}
          key: ${{ secrets.VPN_SSH_KEY }}
          port: ${{ secrets.VPN_PORT }}
          script: kubectl rollout restart deployment app

      - name: Check Connect VPN
        run: echo ${{ steps.connect_vpn.outputs.STATUS }}
      - name: kill vpn
        if: always()
        run: sudo killall openvpn

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Alla prover klarade sig, gött!!
