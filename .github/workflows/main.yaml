name: automation

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check in to current repo
        uses: actions/checkout@v2

      - name: Save release version
        run: echo "VERSION_CONTROL=$(echo ${GIT_MESSAGE} | grep -Po '(?<=-v:)[^;]+')" >> $GITHUB_ENV
        env:
          GIT_MESSAGE: ${{github.event.head_commit.message}}

      - name: Setup Dotnet Env
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Run dotnet restore
        run: dotnet restore
      
      - name: Run dotnet Build
        run: dotnet build --no-restore

      - name: Unit tests
        run: dotnet test --no-build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Building the Docker Image
        run: docker build -t valient/assignment:$VERSION_CONTROL -t valient/assignment:latest . 

      - name: Pushing the Docker Image
        run: docker push -a valient/assignment

      - name: Install Open VPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      - name: Connect to VPN
        id: connect_vpn
        uses: "kota65535/github-openvpn-connect-action@v1"
        with:
          config_file: ./.github/vpn/config.ovpn
          username: ${{ secrets.VPN_USERNAME}}
          password: ${{ secrets.VPN_PASSWORD}}
          client_key: ${{ secrets.OPEN_VPN_KEY}}

      - name: Check Connect VPN
        run: echo ${{ steps.connect_vpn.outputs.STATUS }}

      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            kubectl rollout restart deployment cloud
            cat min-deployment.yaml
      
      - name: kill vpn
        if: always()
        run: sudo killall openvpn

      # Will all tasks finish?
      - name: Run a one-line script
        run: echo Alla prover klarade sig, g√∂tt!!
